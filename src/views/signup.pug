extends layout

block content
  include partial/navbar
  include partial/header

  <!-- Toast start -->
  #toastNoAutohideSuccess.toast(role='alert' aria-live='assertive' aria-atomic='true' data-bs-delay="2000" style='opacity: 1; display: none')
    .toast-header.text-success
      i(data-feather='check-circle').me-2
      strong.me-auto #{t('signup.signup-success')}
      button.ms-2.mb-1.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
    .toast-body
      | #{t('signup.signup-success-msg')}
  #toastNoAutohideError.toast(role='alert' aria-live='assertive' aria-atomic='true' data-bs-delay="2000" style='opacity: 1; display: none')
    .toast-header.text-danger
      i(data-feather='alert-octagon').me-2
      strong.me-auto #{t('signup.signup-failure')}
      button.ms-2.mb-1.btn-close(type='button' data-bs-dismiss='toast' aria-label='Close')
    .toast-body
      | #{t('signup.signup-failure-msg')}

  <!-- Signup Start -->
  .container-xxl.py-2.mt-4
    .container
      .row.g-4.wow.fadeInUp(data-wow-delay='0.5s ')
        center
          form#registerForm.shadow.p-4.custom-width(action='/register' method='POST')
            .text-center.wow.fadeInUp(data-wow-delay='0.1s')
              h1.mb-5.bg-white.text-center.px-3 #{t('home.signup')}
            .row.g-3
              .col-12
                .form-floating
                  input#username.form-control(type='text' placeholder='Username' name='name' required)
                  label(for='username') #{t('signup.username')}
              .col-12
                .form-floating
                  input#email.form-control(type='email' placeholder='Email Address' name='email' required)
                  label(for='email') #{t('signup.email')}
              .col-12
                .form-floating
                  input#phone_number.form-control(type='tel' placeholder='Phone Number' name='phone_number' required)
                  label(for='phone_number') #{t('admin-user.phone_number')}
              .col-12
                .form-floating
                  input#date_of_birth.form-control(type='date' name='date_of_birth')
                  label(for='date_of_birth') #{t('admin-user.date_of_birth')}
              .col-12
                .form-floating
                  select#gender.form-select(name='gender')
                    option(value='male') #{t('signup.male')}
                    option(value='female') #{t('signup.female')}
                    option(value='other') #{t('signup.other')}
                  label(for='gender') #{t('admin-user.gender')}
              .col-12
                .form-floating
                  input#address.form-control(type='text' placeholder='Address' name='address')
                  label(for='address') #{t('signup.address')}
              .col-12
                .form-floating
                  select#role.form-select(name='role' required)
                    option(value='user') #{t('admin-user.user')}
                    option(value='professor') #{t('admin-user.professor')}
                  label(for='role') #{t('signup.role')}
              .col-12.form-floating.department-field(style='display: none;')
                 input#department.form-control(type='text' placeholder='Department' name='department')
                 label(for='department') #{t('signup.department')}
              .col-12.form-floating.years-experience-field(style='display: none;')
                 input#years_of_experience.form-control(type='number' placeholder='Years of Experience' name='years_of_experience')
                 label(for='years_of_experience') #{t('signup.years-of-experience')}
              .col-12
                .form-floating
                  input#password.form-control(type='password' placeholder='Password' name='password' required)
                  label(for='password') #{t('signup.password')}
              .col-12
                .form-floating
                  input#identity_card.form-control(type='text' placeholder='Identity Card' name='identity_card')
                  label(for='identity_card') #{t('signup.identity-card')}
              .col-12
                .form-floating
                  textarea#additional_info.form-control(placeholder='Additional Info' name='additional_info')
                  label(for='additional_info') #{t('signup.additional-info')}
              .col-12
                button.btn.text-light.w-100.py-3(type='submit') #{t('home.signup')}
              .col-12.text-center
                p
                  | #{t('signup.login')}
                  a.text-decoration-none(href='/login') #{t('home.login')}
  <!-- Signup End -->

  include partial/footer
  script.
    document.querySelector("#registerForm").addEventListener("submit", async function(event) {
      event.preventDefault();
      const formData = new FormData(this);
      const data = {
        name: formData.get("name"),
        email: formData.get("email"),
        role: formData.get("role"),
        password: formData.get("password"),
        phone_number: formData.get("phone_number"),
        date_of_birth: formData.get("date_of_birth"),
        gender: formData.get("gender"),
        address: formData.get("address"),
        identity_card: formData.get("identity_card"),
        additional_info: formData.get("additional_info"),
        department: formData.get("department"),
        years_of_experience: formData.get("years_of_experience"),

      };

      try {
        const response = await $.ajax({
          url: "/register",
          method: "POST",
          contentType: "application/json",
          data: JSON.stringify(data),
        });

        if (response.status === 201) {
          const toastElement = document.getElementById("toastNoAutohideSuccess");
          toastElement.style.removeProperty("display");
          setTimeout(() => {
            window.location.href = "/login";
          }, 2000);
        } 
      } catch (error) {
        const toastElement = document.getElementById("toastNoAutohideError");
        toastElement.style.removeProperty("display");
        setTimeout(() => {
          toastElement.style.display = "none";
        }, 2000);
      }
    });
    document.querySelector("#role").addEventListener("change", function () {
      const isProfessor = this.value === "professor";
      document.querySelector(".department-field").style.display = isProfessor ? "block" : "none";
      document.querySelector(".years-experience-field").style.display = isProfessor ? "block" : "none";
    });
